{
    "results": [
        {
            "check_id": "javascript.shelljs.security.shelljs-exec-injection.shelljs-exec-injection",
            "TP":1,
            "FP":0,
            "end": {
                "col": 70,
                "line": 96,
                "offset": 2644
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "e8d9b8c968e7e179fe6640c8041bb724a82a7dedb3a9534e820f29dfa16de6bf2cd791984218e0440f8e4d51a03d2d196691e57892c482982d5573e2a16ec812_0",
                "is_ignored": false,
                "lines": "  const { code, stdout, stderr } = sh.exec(command, { silent: true });",
                "message": "If unverified user data can reach the `exec` method it can result in Remote Code Execution",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9350,
                            "rule_id": "6JUj9k",
                            "rv_id": 834191,
                            "url": "https://semgrep.dev/playground/r/d6TKGZk/javascript.shelljs.security.shelljs-exec-injection.shelljs-exec-injection",
                            "version_id": "d6TKGZk"
                        }
                    },
                    "shortlink": "https://sg.run/AvEB",
                    "source": "https://semgrep.dev/r/javascript.shelljs.security.shelljs-exec-injection.shelljs-exec-injection",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "shelljs"
                    ],
                    "vulnerability_class": [
                        "Command Injection"
                    ]
                },
                "metavars": {
                    "$INPUT": {
                        "abstract_content": "command",
                        "end": {
                            "col": 51,
                            "line": 96,
                            "offset": 2625
                        },
                        "start": {
                            "col": 44,
                            "line": 96,
                            "offset": 2618
                        }
                    },
                    "$SHELL": {
                        "abstract_content": "sh",
                        "end": {
                            "col": 38,
                            "line": 96,
                            "offset": 2612
                        },
                        "start": {
                            "col": 36,
                            "line": 96,
                            "offset": 2610
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/benchmark/benchmark.js",
            "start": {
                "col": 36,
                "line": 96,
                "offset": 2610
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "TP":0,
            "FP":1,
            "end": {
                "col": 68,
                "line": 23,
                "offset": 477
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b449e5c692842b5e7807744d608a85937a413c9432be54362d61e8a9279985bdebf4151b99e23e80613fbf23739f2f6ebfafad86011af5763a67681d458386ae_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://unpkg.com/lodash@4.17.4/lodash.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://unpkg.com/lodash@4.17.4/lodash.js\"",
                        "end": {
                            "col": 58,
                            "line": 23,
                            "offset": 467
                        },
                        "start": {
                            "col": 10,
                            "line": 23,
                            "offset": 419
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/benchmark/index.html",
            "start": {
                "col": 3,
                "line": 23,
                "offset": 412
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "TP":0,
            "FP":1,
            "end": {
                "col": 73,
                "line": 24,
                "offset": 550
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f2241bb729f6f04bfad275ca108a3aa6ae239b9df3576ecee37f4755591a03db512965f41073fb62e356a5073d32c24c634e103f7fc84b91430ca97d4301b666_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://unpkg.com/benchmark@2.1.4/benchmark.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://unpkg.com/benchmark@2.1.4/benchmark.js\"",
                        "end": {
                            "col": 63,
                            "line": 24,
                            "offset": 540
                        },
                        "start": {
                            "col": 10,
                            "line": 24,
                            "offset": 487
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/benchmark/index.html",
            "start": {
                "col": 3,
                "line": 24,
                "offset": 480
            }
        },
        {
            "check_id": "dockerfile.security.missing-user.missing-user",
            "TP":1,
            "FP":0,
            "end": {
                "col": 43,
                "line": 55,
                "offset": 1683
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0b192bbaa5a5a0a86ef0c8ba81e04cb39d14a1ca70a66a6ba4666013fd12567ffd3dae54d32d2a1cdc9c6159153590e09a586ea3b3977acd221fca8efa08dc73_0",
                "fix": "USER non-root\nCMD [\"sh\", \"/usr/local/bin/docker-run.sh\"]",
                "is_ignored": false,
                "lines": "CMD [\"sh\", \"/usr/local/bin/docker-run.sh\"]",
                "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-269: Improper Privilege Management"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A04:2021 - Insecure Design"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A04_2021-Insecure_Design"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 20148,
                            "rule_id": "AbUN06",
                            "rv_id": 833486,
                            "url": "https://semgrep.dev/playground/r/nWTy4lK/dockerfile.security.missing-user.missing-user",
                            "version_id": "nWTy4lK"
                        }
                    },
                    "shortlink": "https://sg.run/Gbvn",
                    "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "dockerfile"
                    ],
                    "vulnerability_class": [
                        "Improper Authorization"
                    ]
                },
                "metavars": {
                    "$...VARS": {
                        "abstract_content": "[\"sh\"\"/usr/local/bin/docker-run.sh\"]",
                        "end": {
                            "col": 43,
                            "line": 55,
                            "offset": 1683
                        },
                        "start": {
                            "col": 5,
                            "line": 55,
                            "offset": 1645
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/Dockerfile",
            "start": {
                "col": 1,
                "line": 55,
                "offset": 1641
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 54,
                "line": 25,
                "offset": 506
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_0",
                "is_ignored": false,
                "lines": "          add_header 'X-Frame-Options' 'deny always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 25,
                "offset": 463
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 45,
                "line": 26,
                "offset": 551
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_1",
                "is_ignored": false,
                "lines": "          add_header 'X-XSS-Protection' '\"1; mode=block\" always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 26,
                "offset": 517
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 64,
                "line": 27,
                "offset": 636
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_2",
                "is_ignored": false,
                "lines": "          add_header 'X-Content-Type-Options' 'nosniff always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 27,
                "offset": 583
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 74,
                "line": 28,
                "offset": 710
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_3",
                "is_ignored": false,
                "lines": "          add_header 'Referrer-Policy' 'strict-origin-when-cross-origin';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 28,
                "offset": 647
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 56,
                "line": 31,
                "offset": 805
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_4",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Origin' '*';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 31,
                "offset": 760
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 74,
                "line": 32,
                "offset": 879
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_5",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 32,
                "offset": 816
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 158,
                "line": 36,
                "offset": 1148
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_6",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 36,
                "offset": 1001
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 55,
                "line": 40,
                "offset": 1298
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_7",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Max-Age' 1728000;",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 40,
                "offset": 1254
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 64,
                "line": 41,
                "offset": 1362
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_8",
                "is_ignored": false,
                "lines": "          add_header 'Content-Type' 'text/plain charset=UTF-8';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 41,
                "offset": 1309
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 41,
                "line": 42,
                "offset": 1403
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_9",
                "is_ignored": false,
                "lines": "          add_header 'Content-Length' 0;",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 42,
                "offset": 1373
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 54,
                "line": 47,
                "offset": 1558
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_10",
                "is_ignored": false,
                "lines": "          add_header 'X-Frame-Options' 'deny always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 47,
                "offset": 1515
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 45,
                "line": 48,
                "offset": 1603
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_11",
                "is_ignored": false,
                "lines": "          add_header 'X-XSS-Protection' '\"1; mode=block\" always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 48,
                "offset": 1569
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 64,
                "line": 49,
                "offset": 1688
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_12",
                "is_ignored": false,
                "lines": "          add_header 'X-Content-Type-Options' 'nosniff always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 49,
                "offset": 1635
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 74,
                "line": 50,
                "offset": 1762
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_13",
                "is_ignored": false,
                "lines": "          add_header 'Referrer-Policy' 'strict-origin-when-cross-origin';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 50,
                "offset": 1699
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 56,
                "line": 53,
                "offset": 1857
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_14",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Origin' '*';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 53,
                "offset": 1812
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 74,
                "line": 54,
                "offset": 1931
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_15",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 54,
                "offset": 1868
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 158,
                "line": 55,
                "offset": 2089
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_16",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 55,
                "offset": 1942
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 54,
                "line": 59,
                "offset": 2221
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_17",
                "is_ignored": false,
                "lines": "          add_header 'X-Frame-Options' 'deny always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 59,
                "offset": 2178
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 45,
                "line": 60,
                "offset": 2266
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_18",
                "is_ignored": false,
                "lines": "          add_header 'X-XSS-Protection' '\"1; mode=block\" always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 60,
                "offset": 2232
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 64,
                "line": 61,
                "offset": 2351
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_19",
                "is_ignored": false,
                "lines": "          add_header 'X-Content-Type-Options' 'nosniff always';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 61,
                "offset": 2298
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 74,
                "line": 62,
                "offset": 2425
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_20",
                "is_ignored": false,
                "lines": "          add_header 'Referrer-Policy' 'strict-origin-when-cross-origin';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 62,
                "offset": 2362
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 56,
                "line": 65,
                "offset": 2520
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_21",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Origin' '*';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 65,
                "offset": 2475
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 74,
                "line": 66,
                "offset": 2594
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_22",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 66,
                "offset": 2531
            }
        },
        {
            "check_id": "generic.nginx.security.header-redefinition.header-redefinition",
            "TP":0,
            "FP":1,
            "end": {
                "col": 158,
                "line": 67,
                "offset": 2752
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7143c61b073851e182127d16736dc110b0cb60f062c2d423b0570c3f38f4d2e16e89e18fda2f7048927bd2bd8dc66c09d805acda7324e96886a88a2b050970e2_23",
                "is_ignored": false,
                "lines": "          add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';",
                "message": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-16: CWE CATEGORY: Configuration"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A06:2017 - Security Misconfiguration",
                        "A05:2021 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://github.com/yandex/gixy/blob/master/docs/en/plugins/addheaderredefinition.md"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9039,
                            "rule_id": "BYUN58",
                            "rv_id": 833572,
                            "url": "https://semgrep.dev/playground/r/jQTrXe5/generic.nginx.security.header-redefinition.header-redefinition",
                            "version_id": "jQTrXe5"
                        }
                    },
                    "shortlink": "https://sg.run/Lwl7",
                    "source": "https://semgrep.dev/r/generic.nginx.security.header-redefinition.header-redefinition",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "nginx"
                    ],
                    "vulnerability_class": [
                        "Other"
                    ]
                },
                "metavars": {},
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/config/docker/nginx.conf",
            "start": {
                "col": 11,
                "line": 67,
                "offset": 2605
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "TP":1,
            "FP":0,
            "end": {
                "col": 63,
                "line": 189,
                "offset": 4887
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "key",
                            "location": {
                                "end": {
                                    "col": 45,
                                    "line": 187,
                                    "offset": 4755
                                },
                                "path": "ReDoc/demo/index.tsx",
                                "start": {
                                    "col": 42,
                                    "line": 187,
                                    "offset": 4752
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 63,
                                    "line": 189,
                                    "offset": 4887
                                },
                                "path": "ReDoc/demo/index.tsx",
                                "start": {
                                    "col": 14,
                                    "line": 189,
                                    "offset": 4838
                                }
                            },
                            "new RegExp('([?|&])' + key + '=?.*?(&|#|$)', 'i')"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 45,
                                    "line": 187,
                                    "offset": 4755
                                },
                                "path": "ReDoc/demo/index.tsx",
                                "start": {
                                    "col": 42,
                                    "line": 187,
                                    "offset": 4752
                                }
                            },
                            "key"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "53a5319031b2ff63f6c780ed68c31baef427ca3b42af808dd4d8fef11bc3ea56228d9fab9069cc6e1a4beaed85601c5e7325713c4fc03fb87918017717796a51_0",
                "is_ignored": false,
                "lines": "  const re = new RegExp('([?|&])' + key + '=?.*?(&|#|$)', 'i');",
                "message": "RegExp() called with a `key` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "key",
                        "end": {
                            "col": 45,
                            "line": 187,
                            "offset": 4755
                        },
                        "start": {
                            "col": 42,
                            "line": 187,
                            "offset": 4752
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/demo/index.tsx",
            "start": {
                "col": 14,
                "line": 189,
                "offset": 4838
            }
        },
        {
            "check_id": "yaml.openapi.security.use-of-basic-authentication.use-of-basic-authentication",
            "TP":1,
            "FP":0,
            "end": {
                "col": 20,
                "line": 493,
                "offset": 15805
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "2dc305610ce2a8a9ddb111395feb6834671ca7e9a6fa350d30bd8861d5b7b52472a12dd40ae423eb09899dd7e5a82c539bee4088aeb4b6279f500325d68c62e8_0",
                "is_ignored": false,
                "lines": "      type: http\n      scheme: basic",
                "message": "Basic authentication is considered weak and should be avoided.  Use a different authentication scheme, such of OAuth2, OpenID Connect, or mTLS.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": "CWE-287: Improper Authentication",
                    "impact": "HIGH",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A04:2021 Insecure Design",
                        "A07:2021 Identification and Authentication Failures"
                    ],
                    "references": [
                        "https://cwe.mitre.org/data/definitions/287.html",
                        "https://owasp.org/Top10/A04_2021-Insecure_Design/",
                        "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 133077,
                            "rule_id": "zdUKgEX",
                            "rv_id": 835338,
                            "url": "https://semgrep.dev/playground/r/bZTBo4k/yaml.openapi.security.use-of-basic-authentication.use-of-basic-authentication",
                            "version_id": "bZTBo4k"
                        }
                    },
                    "shortlink": "https://sg.run/v8wNW",
                    "source": "https://semgrep.dev/r/yaml.openapi.security.use-of-basic-authentication.use-of-basic-authentication",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "openapi"
                    ],
                    "vulnerability_class": [
                        "Improper Authentication"
                    ]
                },
                "metavars": {
                    "$SCHEME": {
                        "abstract_content": "MuseumPlaceholderAuth",
                        "end": {
                            "col": 26,
                            "line": 491,
                            "offset": 15767
                        },
                        "start": {
                            "col": 5,
                            "line": 491,
                            "offset": 15746
                        }
                    },
                    "$VERSION": {
                        "abstract_content": "3.1.0",
                        "end": {
                            "col": 15,
                            "line": 1,
                            "offset": 14
                        },
                        "start": {
                            "col": 10,
                            "line": 1,
                            "offset": 9
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/demo/museum.yaml",
            "start": {
                "col": 7,
                "line": 492,
                "offset": 15775
            }
        },
        {
            "check_id": "problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server",
            "TP":0,
            "FP":1,
            "end": {
                "col": 20,
                "line": 14,
                "offset": 379
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4839054fd52c52893ee510977fd4dd3132c7bbca04bea2ac7e73cc77c84c988aab8754ea0376246205f55f3274c8426d387e1c76dc3abc99eed17c4780100155_0",
                "is_ignored": false,
                "lines": "const server = http.createServer(async (request, response) => {",
                "message": "Checks for any usage of http servers instead of https servers. Encourages the usage of https protocol instead of http, which does not have TLS and is therefore unencrypted. Using http can lead to man-in-the-middle attacks in which the attacker is able to read sensitive information.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": "CWE-319: Cleartext Transmission of Sensitive Information",
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A02:2021 - Cryptographic Failures",
                        "A03:2017 - Sensitive Data Exposure"
                    ],
                    "references": [
                        "https://nodejs.org/api/http.html#http_class_http_agent",
                        "https://groups.google.com/g/rubyonrails-security/c/NCCsca7TEtY"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9430,
                            "rule_id": "7KUQAE",
                            "rv_id": 834340,
                            "url": "https://semgrep.dev/playground/r/7ZTx97o/problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server",
                            "version_id": "7ZTx97o"
                        }
                    },
                    "shortlink": "https://sg.run/x1zL",
                    "source": "https://semgrep.dev/r/problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "node.js"
                    ],
                    "vulnerability": "Insecure Transport",
                    "vulnerability_class": [
                        "Mishandled Sensitive Information"
                    ]
                },
                "metavars": {
                    "$FUNC": {
                        "abstract_content": "createServer",
                        "end": {
                            "col": 33,
                            "line": 14,
                            "offset": 392
                        },
                        "start": {
                            "col": 21,
                            "line": 14,
                            "offset": 380
                        }
                    },
                    "$HTTP": {
                        "abstract_content": "http",
                        "end": {
                            "col": 20,
                            "line": 14,
                            "offset": 379
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "require('http')",
                            "svalue_end": {
                                "col": 29,
                                "line": 9,
                                "offset": 311
                            },
                            "svalue_start": {
                                "col": 14,
                                "line": 9,
                                "offset": 296
                            }
                        },
                        "start": {
                            "col": 16,
                            "line": 14,
                            "offset": 375
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/demo/ssr/index.ts",
            "start": {
                "col": 16,
                "line": 14,
                "offset": 375
            }
        },
        {
            "check_id": "javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
            "TP":1,
            "FP":0,
            "end": {
                "col": 44,
                "line": 14,
                "offset": 580
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "filename",
                            "location": {
                                "end": {
                                    "col": 23,
                                    "line": 13,
                                    "offset": 533
                                },
                                "path": "ReDoc/demo/webpack.config.ts",
                                "start": {
                                    "col": 15,
                                    "line": 13,
                                    "offset": 525
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 44,
                                    "line": 14,
                                    "offset": 580
                                },
                                "path": "ReDoc/demo/webpack.config.ts",
                                "start": {
                                    "col": 18,
                                    "line": 14,
                                    "offset": 554
                                }
                            },
                            "__dirname + '/' + filename"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 23,
                                    "line": 13,
                                    "offset": 533
                                },
                                "path": "ReDoc/demo/webpack.config.ts",
                                "start": {
                                    "col": 15,
                                    "line": 13,
                                    "offset": 525
                                }
                            },
                            "filename"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "21338e9900d2dc3ddeed39ed747d4dd1c8fd62a9eb812fd5779296928cdc95de12bd6a3b9fdc644aa8e6ff82d73ac6b5cd22a6cb9b57e9ac335b4d11ceb6e1f6_0",
                "is_ignored": false,
                "lines": "  return resolve(__dirname + '/' + filename);",
                "message": "Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "HIGH",
                    "owasp": [
                        "A05:2017 - Broken Access Control",
                        "A01:2021 - Broken Access Control"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Path_Traversal"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9331,
                            "rule_id": "8GUjrq",
                            "rv_id": 834146,
                            "url": "https://semgrep.dev/playground/r/JdTlrjW/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
                            "version_id": "JdTlrjW"
                        }
                    },
                    "shortlink": "https://sg.run/OPqk",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript",
                        "node.js"
                    ],
                    "vulnerability_class": [
                        "Path Traversal"
                    ]
                },
                "metavars": {
                    "$SINK": {
                        "abstract_content": "__dirname+'/'+filename",
                        "end": {
                            "col": 44,
                            "line": 14,
                            "offset": 580
                        },
                        "start": {
                            "col": 18,
                            "line": 14,
                            "offset": 554
                        }
                    },
                    "$X": {
                        "abstract_content": "filename",
                        "end": {
                            "col": 23,
                            "line": 13,
                            "offset": 533
                        },
                        "start": {
                            "col": 15,
                            "line": 13,
                            "offset": 525
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/demo/webpack.config.ts",
            "start": {
                "col": 18,
                "line": 14,
                "offset": 554
            }
        },
        {
            "check_id": "typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
            "TP":1,
            "FP":0,
            "end": {
                "col": 78,
                "line": 48,
                "offset": 1520
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "options",
                            "location": {
                                "end": {
                                    "col": 19,
                                    "line": 42,
                                    "offset": 1247
                                },
                                "path": "ReDoc/src/components/JsonViewer/JsonViewer.tsx",
                                "start": {
                                    "col": 12,
                                    "line": 42,
                                    "offset": 1240
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 78,
                                    "line": 48,
                                    "offset": 1520
                                },
                                "path": "ReDoc/src/components/JsonViewer/JsonViewer.tsx",
                                "start": {
                                    "col": 25,
                                    "line": 48,
                                    "offset": 1467
                                }
                            },
                            "jsonToHTML(props.data, options.jsonSampleExpandLevel)"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 19,
                                    "line": 42,
                                    "offset": 1247
                                },
                                "path": "ReDoc/src/components/JsonViewer/JsonViewer.tsx",
                                "start": {
                                    "col": 12,
                                    "line": 42,
                                    "offset": 1240
                                }
                            },
                            "options"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "000815d946f4b44119a9cb9b4740f5fd73dbab1e3765fadfa5dba30e22fb729b5b2f32452e42163b4d56b847516991a0148174265b1a54351fe0fc73f3671179_0",
                "is_ignored": false,
                "lines": "                __html: jsonToHTML(props.data, options.jsonSampleExpandLevel),",
                "message": "Detection of dangerouslySetInnerHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use dangerouslySetInnerHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9769,
                            "rule_id": "x8UWvK",
                            "rv_id": 835290,
                            "url": "https://semgrep.dev/playground/r/1QTPNkl/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                            "version_id": "1QTPNkl"
                        }
                    },
                    "shortlink": "https://sg.run/rAx6",
                    "source": "https://semgrep.dev/r/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "react"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$X": {
                        "abstract_content": "options",
                        "end": {
                            "col": 19,
                            "line": 42,
                            "offset": 1247
                        },
                        "start": {
                            "col": 12,
                            "line": 42,
                            "offset": 1240
                        }
                    },
                    "$Y": {
                        "abstract_content": "PrismDiv",
                        "end": {
                            "col": 22,
                            "line": 43,
                            "offset": 1274
                        },
                        "start": {
                            "col": 14,
                            "line": 43,
                            "offset": 1266
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/components/JsonViewer/JsonViewer.tsx",
            "start": {
                "col": 25,
                "line": 48,
                "offset": 1467
            }
        },
        {
            "check_id": "typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
            "TP":1,
            "FP":0,
            "end": {
                "col": 63,
                "line": 28,
                "offset": 930
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "options",
                            "location": {
                                "end": {
                                    "col": 15,
                                    "line": 24,
                                    "offset": 746
                                },
                                "path": "ReDoc/src/components/Markdown/SanitizedMdBlock.tsx",
                                "start": {
                                    "col": 8,
                                    "line": 24,
                                    "offset": 739
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 63,
                                    "line": 28,
                                    "offset": 930
                                },
                                "path": "ReDoc/src/components/Markdown/SanitizedMdBlock.tsx",
                                "start": {
                                    "col": 21,
                                    "line": 28,
                                    "offset": 888
                                }
                            },
                            "sanitize(options.untrustedSpec, rest.html)"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 15,
                                    "line": 24,
                                    "offset": 746
                                },
                                "path": "ReDoc/src/components/Markdown/SanitizedMdBlock.tsx",
                                "start": {
                                    "col": 8,
                                    "line": 24,
                                    "offset": 739
                                }
                            },
                            "options"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "a1a32dc64113c37fc2366be6fe4afabb1f4072fda1e921290bc1c6dbe0cc18e90255ab6295b614f4888a2f1802fec3b33200f609066dcc33f0238e2f35831616_0",
                "is_ignored": false,
                "lines": "            __html: sanitize(options.untrustedSpec, rest.html),",
                "message": "Detection of dangerouslySetInnerHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use dangerouslySetInnerHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9769,
                            "rule_id": "x8UWvK",
                            "rv_id": 835290,
                            "url": "https://semgrep.dev/playground/r/1QTPNkl/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                            "version_id": "1QTPNkl"
                        }
                    },
                    "shortlink": "https://sg.run/rAx6",
                    "source": "https://semgrep.dev/r/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "react"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$X": {
                        "abstract_content": "options",
                        "end": {
                            "col": 15,
                            "line": 24,
                            "offset": 746
                        },
                        "start": {
                            "col": 8,
                            "line": 24,
                            "offset": 739
                        }
                    },
                    "$Y": {
                        "abstract_content": "Wrap",
                        "end": {
                            "col": 14,
                            "line": 25,
                            "offset": 765
                        },
                        "start": {
                            "col": 10,
                            "line": 25,
                            "offset": 761
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/components/Markdown/SanitizedMdBlock.tsx",
            "start": {
                "col": 21,
                "line": 28,
                "offset": 888
            }
        },
        {
            "check_id": "typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
            "TP":1,
            "FP":0,
            "end": {
                "col": 79,
                "line": 14,
                "offset": 479
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "props",
                            "location": {
                                "end": {
                                    "col": 33,
                                    "line": 12,
                                    "offset": 343
                                },
                                "path": "ReDoc/src/components/SourceCode/SourceCode.tsx",
                                "start": {
                                    "col": 28,
                                    "line": 12,
                                    "offset": 338
                                }
                            }
                        },
                        {
                            "content": "source",
                            "location": {
                                "end": {
                                    "col": 17,
                                    "line": 13,
                                    "offset": 383
                                },
                                "path": "ReDoc/src/components/SourceCode/SourceCode.tsx",
                                "start": {
                                    "col": 11,
                                    "line": 13,
                                    "offset": 377
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 79,
                                    "line": 14,
                                    "offset": 479
                                },
                                "path": "ReDoc/src/components/SourceCode/SourceCode.tsx",
                                "start": {
                                    "col": 56,
                                    "line": 14,
                                    "offset": 456
                                }
                            },
                            "highlight(source, lang)"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 33,
                                    "line": 12,
                                    "offset": 343
                                },
                                "path": "ReDoc/src/components/SourceCode/SourceCode.tsx",
                                "start": {
                                    "col": 28,
                                    "line": 12,
                                    "offset": 338
                                }
                            },
                            "props"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "222037efcbd2c2c8b3f3196bb9869f619a2e235d7a3cf4128ad87aa7955326e9058d46fef20b6eb8c4ea2840c119dfedf19190c0d9812d91a168b2ff93f939e8_0",
                "is_ignored": false,
                "lines": "  return <StyledPre dangerouslySetInnerHTML={{ __html: highlight(source, lang) }} />;",
                "message": "Detection of dangerouslySetInnerHTML from non-constant definition. This can inadvertently expose users to cross-site scripting (XSS) attacks if this comes from user-provided input. If you have to use dangerouslySetInnerHTML, consider using a sanitization library such as DOMPurify to sanitize your HTML.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9769,
                            "rule_id": "x8UWvK",
                            "rv_id": 835290,
                            "url": "https://semgrep.dev/playground/r/1QTPNkl/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                            "version_id": "1QTPNkl"
                        }
                    },
                    "shortlink": "https://sg.run/rAx6",
                    "source": "https://semgrep.dev/r/typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "react"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$X": {
                        "abstract_content": "props",
                        "end": {
                            "col": 33,
                            "line": 12,
                            "offset": 343
                        },
                        "start": {
                            "col": 28,
                            "line": 12,
                            "offset": 338
                        }
                    },
                    "$Y": {
                        "abstract_content": "StyledPre",
                        "end": {
                            "col": 20,
                            "line": 14,
                            "offset": 420
                        },
                        "start": {
                            "col": 11,
                            "line": 14,
                            "offset": 411
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/components/SourceCode/SourceCode.tsx",
            "start": {
                "col": 56,
                "line": 14,
                "offset": 456
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "TP":1,
            "FP":0,
            "end": {
                "col": 98,
                "line": 30,
                "offset": 1076
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "componentName",
                            "location": {
                                "end": {
                                    "col": 58,
                                    "line": 29,
                                    "offset": 967
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 45,
                                    "line": 29,
                                    "offset": 954
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 98,
                                    "line": 30,
                                    "offset": 1076
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 24,
                                    "line": 30,
                                    "offset": 1002
                                }
                            },
                            "new RegExp(COMPONENT_REGEXP.replace(/{component}/g, componentName), 'gmi')"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 58,
                                    "line": 29,
                                    "offset": 967
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 45,
                                    "line": 29,
                                    "offset": 954
                                }
                            },
                            "componentName"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "98290075c0fbc1acf28e4076ef7a2ca46cc14fb17cc154513be31b160582b9882614f1a6d532a56092f0844a61d3ae5e0c7c6f36b87231544f0e31b82abef5c6_0",
                "is_ignored": false,
                "lines": "    const compRegexp = new RegExp(COMPONENT_REGEXP.replace(/{component}/g, componentName), 'gmi');",
                "message": "RegExp() called with a `componentName` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "componentName",
                        "end": {
                            "col": 58,
                            "line": 29,
                            "offset": 967
                        },
                        "start": {
                            "col": 45,
                            "line": 29,
                            "offset": 954
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/services/MarkdownRenderer.ts",
            "start": {
                "col": 24,
                "line": 30,
                "offset": 1002
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "TP":1,
            "FP":0,
            "end": {
                "col": 75,
                "line": 35,
                "offset": 1262
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "heading",
                            "location": {
                                "end": {
                                    "col": 49,
                                    "line": 34,
                                    "offset": 1168
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 42,
                                    "line": 34,
                                    "offset": 1161
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 75,
                                    "line": 35,
                                    "offset": 1262
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 38,
                                    "line": 35,
                                    "offset": 1225
                                }
                            },
                            "new RegExp(`^##?\\\\s+${heading}`, 'm')"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 49,
                                    "line": 34,
                                    "offset": 1168
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 42,
                                    "line": 34,
                                    "offset": 1161
                                }
                            },
                            "heading"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "46a367fea2178ac837c9c50e4d0d26f546ea5fa3fc83cab2d3ec98d546ec5da564b66039c4ed3d2586f55153a8c6e1ae478749857fca3e09c47519af0ad464f0_0",
                "is_ignored": false,
                "lines": "    const headingLinePos = md.search(new RegExp(`^##?\\\\s+${heading}`, 'm'));",
                "message": "RegExp() called with a `heading` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "heading",
                        "end": {
                            "col": 49,
                            "line": 34,
                            "offset": 1168
                        },
                        "start": {
                            "col": 42,
                            "line": 34,
                            "offset": 1161
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/services/MarkdownRenderer.ts",
            "start": {
                "col": 38,
                "line": 35,
                "offset": 1225
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "TP":0,
            "FP":1,
            "end": {
                "col": 8,
                "line": 94,
                "offset": 3068
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "heading",
                            "location": {
                                "end": {
                                    "col": 33,
                                    "line": 91,
                                    "offset": 2918
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 26,
                                    "line": 91,
                                    "offset": 2911
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 8,
                                    "line": 94,
                                    "offset": 3068
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 14,
                                    "line": 92,
                                    "offset": 2955
                                }
                            },
                            "new RegExp(\n        `##?\\\\s+${heading.name.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')}\\s*(\\n|\\r\\n|$|\\s*)`,\n      )"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 33,
                                    "line": 91,
                                    "offset": 2918
                                },
                                "path": "ReDoc/src/services/MarkdownRenderer.ts",
                                "start": {
                                    "col": 26,
                                    "line": 91,
                                    "offset": 2911
                                }
                            },
                            "heading"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "46a367fea2178ac837c9c50e4d0d26f546ea5fa3fc83cab2d3ec98d546ec5da564b66039c4ed3d2586f55153a8c6e1ae478749857fca3e09c47519af0ad464f0_1",
                "is_ignored": false,
                "lines": "      return new RegExp(\n        `##?\\\\s+${heading.name.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')}\\s*(\\n|\\r\\n|$|\\s*)`,\n      );",
                "message": "RegExp() called with a `heading` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "heading",
                        "end": {
                            "col": 33,
                            "line": 91,
                            "offset": 2918
                        },
                        "start": {
                            "col": 26,
                            "line": 91,
                            "offset": 2911
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/services/MarkdownRenderer.ts",
            "start": {
                "col": 14,
                "line": 92,
                "offset": 2955
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "TP":1,
            "FP":0,
            "end": {
                "col": 69,
                "line": 73,
                "offset": 2075
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "heading",
                            "location": {
                                "end": {
                                    "col": 54,
                                    "line": 71,
                                    "offset": 1916
                                },
                                "path": "ReDoc/src/utils/helpers.ts",
                                "start": {
                                    "col": 47,
                                    "line": 71,
                                    "offset": 1909
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 69,
                                    "line": 73,
                                    "offset": 2075
                                },
                                "path": "ReDoc/src/utils/helpers.ts",
                                "start": {
                                    "col": 21,
                                    "line": 73,
                                    "offset": 2027
                                }
                            },
                            "new RegExp(`(^|\\\\n)#\\\\s?${heading}\\\\s*\\\\n`, 'i')"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 54,
                                    "line": 71,
                                    "offset": 1916
                                },
                                "path": "ReDoc/src/utils/helpers.ts",
                                "start": {
                                    "col": 47,
                                    "line": 71,
                                    "offset": 1909
                                }
                            },
                            "heading"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "0292ac76242341ce3a01421217a2f5d830506d3ac50d3ba057a32ae3984f593736780ce5e77a21060fb5dc7c1724565eeb0a0b2c084ba52eb6b9c215b0e2719e_0",
                "is_ignored": false,
                "lines": "  const testRegex = new RegExp(`(^|\\\\n)#\\\\s?${heading}\\\\s*\\\\n`, 'i');",
                "message": "RegExp() called with a `heading` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "heading",
                        "end": {
                            "col": 54,
                            "line": 71,
                            "offset": 1916
                        },
                        "start": {
                            "col": 47,
                            "line": 71,
                            "offset": 1909
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/utils/helpers.ts",
            "start": {
                "col": 21,
                "line": 73,
                "offset": 2027
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "TP":1,
            "FP":0,
            "end": {
                "col": 97,
                "line": 74,
                "offset": 2173
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "heading",
                            "location": {
                                "end": {
                                    "col": 54,
                                    "line": 71,
                                    "offset": 1916
                                },
                                "path": "ReDoc/src/utils/helpers.ts",
                                "start": {
                                    "col": 47,
                                    "line": 71,
                                    "offset": 1909
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 97,
                                    "line": 74,
                                    "offset": 2173
                                },
                                "path": "ReDoc/src/utils/helpers.ts",
                                "start": {
                                    "col": 24,
                                    "line": 74,
                                    "offset": 2100
                                }
                            },
                            "new RegExp(`((\\\\n|^)#\\\\s*${heading}\\\\s*(\\\\n|$)(?:.|\\\\n)*?)(\\\\n#|$)`, 'i')"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 54,
                                    "line": 71,
                                    "offset": 1916
                                },
                                "path": "ReDoc/src/utils/helpers.ts",
                                "start": {
                                    "col": 47,
                                    "line": 71,
                                    "offset": 1909
                                }
                            },
                            "heading"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "0292ac76242341ce3a01421217a2f5d830506d3ac50d3ba057a32ae3984f593736780ce5e77a21060fb5dc7c1724565eeb0a0b2c084ba52eb6b9c215b0e2719e_1",
                "is_ignored": false,
                "lines": "  const replaceRegex = new RegExp(`((\\\\n|^)#\\\\s*${heading}\\\\s*(\\\\n|$)(?:.|\\\\n)*?)(\\\\n#|$)`, 'i');",
                "message": "RegExp() called with a `heading` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "heading",
                        "end": {
                            "col": 54,
                            "line": 71,
                            "offset": 1916
                        },
                        "start": {
                            "col": 47,
                            "line": 71,
                            "offset": 1909
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "ReDoc/src/utils/helpers.ts",
            "start": {
                "col": 24,
                "line": 74,
                "offset": 2100
            }
        }
    ],
    "skipped_rules": [],
    "version": "1.90.0"
}